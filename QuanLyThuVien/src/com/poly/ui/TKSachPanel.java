/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.poly.ui;

import com.poly.dao.TkSachDAO;
import com.poly.model.Sach;
import java.time.LocalDate;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MINH HIEU
 */
public class TKSachPanel extends javax.swing.JPanel {

    /**
     * Creates new form NhanVien_TKSach
     */
    public TKSachPanel() {
        initComponents();
        setTable();
        fillToTable();
        setComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbNam = new javax.swing.JComboBox<>();
        cbngay = new javax.swing.JComboBox<>();
        cbThang = new javax.swing.JComboBox<>();
        cboLuaChon = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTkSach = new javax.swing.JTable();
        lblTong = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Lựa chọn");

        jLabel2.setText("Ngày");

        jLabel3.setText("Tháng");

        jLabel5.setText("Năm");

        cbNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023", "2022", "2021", "2020" }));
        cbNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNamActionPerformed(evt);
            }
        });

        cbngay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cbngay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbngayActionPerformed(evt);
            }
        });

        cbThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cbThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbThangActionPerformed(evt);
            }
        });

        cboLuaChon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Top 10 sách được mượn nhiều nhất", "Top 10 sách được mượn ít nhất", "Sắp xếp danh sách theo ngày nhập tăng dần", "Sắp xếp danh sách theo ngày nhập giảm dần", "Sách có số lượng còn lại giảm dần", "Sách có số lượng còn lại tăng dần" }));
        cboLuaChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLuaChonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboLuaChon, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbngay, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(143, 143, 143)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbThang, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbNam, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbngay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboLuaChon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tblTkSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã sách", "Mã thể loại", "Mã NXB", "Mã tác giả", "Tên sách", "Ngày nhập", "Số lượng", "Còn lại"
            }
        ));
        jScrollPane1.setViewportView(tblTkSach);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblTong.setText("Tổng sách:");

        jButton1.setText("Xuất Excel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblTong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTong, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbngayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbngayActionPerformed
        // TODO add your handling code here:
        if (cbngay.getSelectedIndex() == 0 || cbngay.getSelectedIndex() == -1) {
            fillToTable();
        } else {
            String sql = "SELECT * FROM Sach WHERE DAY(NgayNhap) = ?";
            getCBONgayThangNam(sql, cbngay.getSelectedIndex());
        }
    }//GEN-LAST:event_cbngayActionPerformed

    private void cbNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNamActionPerformed
        // TODO add your handling code here:
        if (cbNam.getSelectedIndex() == 0 || cbNam.getSelectedIndex() == -1) {
            fillToTable();
        } else {
            String sql = "SELECT * FROM Sach WHERE YEAR(NgayMuon) = ?";
            getCBONgayThangNam(sql, cbNam.getSelectedIndex());
        }
    }//GEN-LAST:event_cbNamActionPerformed

    private void cboLuaChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLuaChonActionPerformed
        // TODO add your handling code here:
        if (cboLuaChon.getSelectedIndex() == 0 || cboLuaChon.getSelectedIndex() == -1) {
            fillToTable();
            cbngay.setSelectedIndex(0);
            cbThang.setSelectedIndex(0);
            cbNam.setSelectedIndex(0);
        } else if (cboLuaChon.getSelectedIndex() == 1) {
            String sql = "SELECT TOP 10 s.*, SUM(ct.SoLuong) AS TongSoLuongMuon\n"
                    + "FROM Sach s\n"
                    + "INNER JOIN ChiTietPhieuMuon ct ON s.MaSach = ct.MaSach\n"
                    + "GROUP BY s.MaSach, s.MaTheLoai, s.MaTacGia, s.MaNhaXuatBan, s.TenSach, s.SoLuong, s.NgayNhap, s.Hinh, s.Link\n"
                    + "ORDER BY TongSoLuongMuon DESC;";
            getCBOLuaChon(sql);
        } else if (cboLuaChon.getSelectedIndex() == 2) {
            String sql = "SELECT TOP 10 s.*, SUM(ct.SoLuong) AS TongSoLuongMuon\n"
                    + "FROM Sach s\n"
                    + "INNER JOIN ChiTietPhieuMuon ct ON s.MaSach = ct.MaSach\n"
                    + "GROUP BY s.MaSach, s.MaTheLoai, s.MaTacGia, s.MaNhaXuatBan, s.TenSach, s.SoLuong, s.NgayNhap, s.Hinh, s.Link\n"
                    + "ORDER BY TongSoLuongMuon ASC;";
            getCBOLuaChon(sql);
        } 
         else if (cboLuaChon.getSelectedIndex() == 3) {
            String sql = "SELECT * FROM Sach ORDER BY NgayNhap ASC";
            getCBOLuaChon(sql);
        } else if (cboLuaChon.getSelectedIndex() == 4) {
            String sql = "SELECT * FROM Sach ORDER BY NgayNhap DESC";
            getCBOLuaChon(sql);
        } else if (cboLuaChon.getSelectedIndex() == 5) {
            String sql = "SELECT * FROM Sach ORDER BY SoLuong DESC";
            getCBOLuaChon(sql);
        } else if (cboLuaChon.getSelectedIndex() == 6) {
            String sql = "SELECT * FROM Sach ORDER BY SoLuong ASC";
            getCBOLuaChon(sql);
        }
    }//GEN-LAST:event_cboLuaChonActionPerformed

    private void cbThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbThangActionPerformed
        // TODO add your handling code here:
        if (cbThang.getSelectedIndex() == 0 || cbThang.getSelectedIndex() == -1) {
            fillToTable();
        } else {
            String sql = "SELECT * FROM Sach WHERE MONTH(NgayNhap) = ?";
            getCBONgayThangNam(sql, cbThang.getSelectedIndex());
        }
    }//GEN-LAST:event_cbThangActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbNam;
    private javax.swing.JComboBox<String> cbThang;
    private javax.swing.JComboBox<String> cbngay;
    private javax.swing.JComboBox<String> cboLuaChon;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTong;
    private javax.swing.JTable tblTkSach;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel model;
    TkSachDAO sachDAO = new TkSachDAO();
    List<Sach> listSach;
    LocalDate localDate = LocalDate.now();
    int day = localDate.getDayOfMonth();
    int month = localDate.getMonthValue();
    int year = localDate.getYear();

    private void setTable() {
        model = new DefaultTableModel();
        String[] colums = new String[]{
            "STT", "Ma sach", "Ma The Loai", "Ma Tac Gia", "Ma Nha Xuat Ban", "Ten Sach", "So Luong", "Ngay Nhap", "Hinh", "Link"
        };
        model.setColumnIdentifiers(colums);
        tblTkSach.setModel(model);
    }

    private void setComboBox() {
        cbngay.removeAll();
        cbngay.addItem("Chon ngay");
        for (int i = 1; i <= day; i++) {
            cbngay.addItem(i + "");
        }

        cbThang.removeAll();
        cbThang.addItem("Chon thang");
        for (int i = 1; i <= month; i++) {
            cbThang.addItem(i + "");
        }
//        cbQuy.removeAll();
//        cbQuy.addItem("Chon quy");
//        for (int i = 3; i >= 0; i--) {
//            int index = year - i;
//            cbNam.addItem(index + "");
//        }
        cbNam.removeAll();
        cbNam.addItem("Chon nam");
        for (int i = 3; i >= 0; i--) {
            int index = year - i;
            cbNam.addItem(index + "");
        }
    }

    private void fillToTable() {
        listSach = sachDAO.selectAll();
        model.setRowCount(0);
        int stt = 1;
        for (Sach s : listSach) {
            model.addRow(new Object[]{
                stt,
                s.getMaSach(),
                s.getMaTheLoai(),
                s.getMaTacGia(),
                s.getMaNhaXuatBan(),
                s.getTenSach(),
                s.getSoLuong(),
                s.getNgayNhap(),
                s.getHinhAnh(),
                s.getLink()
            });
            stt++;
        }
        lblTong.setText("Tong phieu muon: " + (stt - 1));
    }

    private void fillToTable(List<Sach> list) {
        listSach = sachDAO.selectAll();
        model.setRowCount(0);
        int stt = 1;
        for (Sach s : list) {
            model.addRow(new Object[]{
                stt,
                s.getMaSach(),
                s.getMaTheLoai(),
                s.getMaTacGia(),
                s.getMaNhaXuatBan(),
                s.getTenSach(),
                s.getSoLuong(),
                s.getNgayNhap(),
                s.getHinhAnh(),
                s.getLink()
            });
            stt++;
        }
        lblTong.setText("Tong phieu muon: " + (stt - 1));
    }

    private void getCBOLuaChon(String sql) {
        List<Sach> list = sachDAO.selectCBOLuaChon(sql);
        fillToTable(list);
    }

    private void getCBONgayThangNam(String sql, int index) {
        List<Sach> list = sachDAO.selectBySQL(sql, index);
        fillToTable(list);
    }
}
